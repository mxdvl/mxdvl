html {
	--ocean: rgb(0% 63.29% 66.65%);
	--glint: rgb(100% 46.32% 10.17%);

	-webkit-text-size-adjust: 100%;
	-moz-text-size-adjust: 100%;
	-ms-text-size-adjust: 100%;
	text-size-adjust: 100%;
}

.light {
	--earth: rgb(0% 14.37% 13.78%);
	--clouds: rgb(93.44% 98.82% 100%);
	--skies: rgb(78.7% 91.16% 93.87%);
}

.dark {
	--earth: rgb(93.44% 98.82% 100%);
	--clouds: rgb(0% 19.5% 22.66%);
	--skies: rgb(0% 11.53% 13.59%);
}

@supports (color: lch(66% 120 54)) {
	html {
		--ocean: lch(60% 72 204);
		--glint: lch(66% 120 54);
	}

	.light {
		--earth: lch(12% 60 192);
		--clouds: lch(98% 6 216);
		--skies: lch(90% 12 216);
	}

	.dark {
		--earth: lch(98% 6 216);
		--clouds: lch(18% 24 216);
		--skies: lch(9% 24 216);
	}
}

body {
	font-family:
		system-ui,
		-apple-system,
		BlinkMacSystemFont,
		"Segoe UI",
		Roboto,
		Oxygen,
		Ubuntu,
		Cantarell,
		"Open Sans",
		"Helvetica Neue",
		sans-serif;

	font-weight: 400;
	font-size: 16px;
	background-color: var(--clouds);
}

body.themed {
	transition:
		background-color 1.2s,
		color 1.2s;
}

@media (prefers-reduced-motion: reduce) {
	body {
		transition: none;
	}
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 0 0 var(--grid) 0;
	line-height: calc(2 * var(--grid));
}

h1 {
	font-size: 2rem;
}

a {
	--border: var(--ocean);
	color: inherit;
	text-decoration-style: solid;
	text-decoration-color: var(--border);
	text-decoration-line: underline;
	text-decoration-thickness: 2px;
	text-underline-offset: 4px;
}

a:hover {
	color: var(--border);
}

a:active {
	color: var(--glint);
}

p {
	margin: var(--grid) 0;
	max-width: calc(var(--grid) * 36);
}

/* -- GRID --------------------------- */

#grid {
	--grid: 1.125rem;
	--grid-double: calc(2 * var(--grid));
	--grid-x: calc(2 * var(--grid));
	--grid-y: calc(1 * var(--grid));

	width: calc(var(--columns, 12) * var(--grid));
	margin: 0 auto;
	padding-block: calc(0.25 * var(--grid-y));
	padding-inline: calc(0.25 * var(--grid-x));
	line-height: var(--grid);
	color: var(--earth);

	position: relative;
}

#grid::before {
	content: "";
	position: absolute;
	inset: 0;
	z-index: -1;
	color: var(--skies);

	background-image: radial-gradient(circle at 25% 75%, currentColor 1px, transparent 1px),
		radial-gradient(circle at 75% 25%, currentColor 1px, transparent 1px);
	background-position: top left;
	background-size: var(--grid-x) var(--grid-y);
}

.themed #grid,
.themed #grid::before {
	transition: color 1.2s;
}

/*
See $lib/grid.ts for generating these widths
deno run dotcom/src/lib/grid.ts | pbcopy
*/

@media screen and (min-width: 342px) {
	#grid {
		--columns: 18;
	}
}

@media screen and (min-width: 450px) {
	#grid {
		--columns: 24;
	}
}

@media screen and (min-width: 558px) {
	#grid {
		--columns: 30;
	}
}

@media screen and (min-width: 666px) {
	#grid {
		--columns: 36;
	}
}

@media screen and (min-width: 774px) {
	#grid {
		--columns: 42;
	}
}

@media screen and (min-width: 882px) {
	#grid {
		--columns: 48;
	}
}

@media screen and (min-width: 990px) {
	#grid {
		--columns: 54;
	}
}

@media screen and (min-width: 1098px) {
	#grid {
		--columns: 60;
	}
}

@media screen and (min-width: 1206px) {
	#grid {
		--columns: 66;
	}
}

@media screen and (min-width: 1314px) {
	#grid {
		--columns: 72;
	}
}
